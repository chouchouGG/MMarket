server:
  port: 8091
  tomcat:
    threads:
      max: 200        # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数,默认200
      min-spare: 50   # 初始化线程数,最小空闲线程数,默认是10
    accept-count: 10  # 等待队列长度


# 应用配置
app:
  config:
    # 版本，方便通过接口版本升级
    api-version: v1
    # 跨域，开发阶段可以设置为 * 不限制
    cross-origin: '*'

# rabbitmq
spring:
  rabbitmq:
    addresses: 117.72.77.81
    port: 15672
    username: admin
    password: admin
    listener:
      simple:
        prefetch: 1 # 每次投递n个消息，消费完在投递n个
    topic:
      activity_sku_stock_zero: activity_sku_stock_zero

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

## 单库单表数据源配置（数据库配置；启动时配置数据库资源信息）
#spring:
#  datasource:
#    username: root  # 数据库用户名
#    password: 123456  # 数据库密码
#    url: jdbc:mysql://117.72.77.81:13306/big-market  # 数据库连接 URL
#    driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动类名
#    hikari:
#      pool-name: Retail_HikariCP # 连接池的名称
#      minimum-idle: 15 # 连接池中保持的最小空闲连接数
#      idle-timeout: 180000 # 空闲连接最大存活时间，超过此时间的空闲连接将被回收（毫秒），默认600000毫秒，即10分钟
#      maximum-pool-size: 25 # 连接池中允许的最大连接数，默认10
#      auto-commit: true  # 控制连接的默认自动提交行为，默认值：true
#      max-lifetime: 1800000 # 连接在连接池中允许的最长生命周期（毫秒），值0表示无限生命周期，默认1800000毫秒，即30分钟
#      connection-timeout: 30000 # 获取数据库连接超时时间（毫秒），默认30000毫秒，即30秒
#      connection-test-query: SELECT 1 # 测试连接的查询语句
#    type: com.zaxxer.hikari.HikariDataSource # 指定数据源的实现类，这里使用 HikariCP（com.zaxxer.hikari.HikariDataSource 是 HikariCP 提供的一个具体实现类）

# 多数据源路由配置，库数量 * 表数量 为2的次幂，如2库4表
# mysql 5.x 配置 driver-class-name: com.mysql.jdbc.Driver    mysql-connector-java 5.1.34
# mysql 8.x 配置 driver-class-name: com.mysql.cj.jdbc.Driver mysql-connector-java 8.0.22
mini-db-router:
  jdbc:
    datasource:
      dbCount: 2 # 总的库数量
      tbCount: 4 # 每个库中的表数量
      default: db00 # 默认数据源（用于无法路由到特定数据源时的备用）
      routerKey: userId # 路由键，用于决定数据存储在具体哪个数据库表中
      list: db01,db02 # 数据源列表，标识所有数据库实例
      # 数据源 db00 配置
      db00:
        driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动类名
        url: jdbc:mysql://117.72.77.81:13306/big-market # 数据库连接 URL
        username: root # 数据库用户名
        password: 123456 # 数据库密码
        type-class-name: com.zaxxer.hikari.HikariDataSource # 连接池类型类名
        pool:
          pool-name: Retail_HikariCP # 连接池的名称
          minimum-idle: 15 # 连接池中保持的最小空闲连接数
          idle-timeout: 180000 # 空闲连接最大存活时间，超过此时间的空闲连接将被回收（毫秒），默认600000毫秒，即10分钟
          maximum-pool-size: 25 # 连接池中允许的最大连接数，默认10
          auto-commit: true  # 控制连接的默认自动提交行为，默认值：true
          max-lifetime: 1800000 # 连接在连接池中允许的最长生命周期（毫秒），值0表示无限生命周期，默认1800000毫秒，即30分钟
          connection-timeout: 30000 # 获取数据库连接超时时间（毫秒），默认30000毫秒，即30秒
          connection-test-query: SELECT 1 # 测试连接的查询语句
      # 数据源 db01 配置
      db01:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://117.72.77.81:13306/big_market_01 # 数据库连接 URL
        username: root
        password: 123456
        type-class-name: com.zaxxer.hikari.HikariDataSource
        pool:
          pool-name: Retail_HikariCP
          minimum-idle: 15
          idle-timeout: 180000
          maximum-pool-size: 25
          auto-commit: true
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1
      # 数据源 db02 配置
      db02:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://117.72.77.81:13306/big_market_02 # 数据库连接 URL
        username: root
        password: 123456
        type-class-name: com.zaxxer.hikari.HikariDataSource
        pool:
          pool-name: Retail_HikariCP
          minimum-idle: 15
          idle-timeout: 180000
          maximum-pool-size: 25
          auto-commit: true
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1


# MyBatis 配置【如需使用记得打开】
mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location:  classpath:/mybatis/config/mybatis-config.xml

# Redis
redis:
  sdk:
    config:
      host: 117.72.77.81
      port: 16379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true

# 日志
logging:
  level:
    root: info
  config: classpath:logback-spring.xml